{"version":3,"sources":["components/Algorithm/style.module.css","pages/Contact/style.module.css","pages/Home/style.module.css","pages/Home/index.js","components/Algorithm/index.js","algorithms.js","pages/AlgoLibrary/index.js","pages/Contact/index.js","components/Navbar/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","className","classes","box","inner","Algorithm","props","Card","margin","CardBody","CardTitle","title","CardSubtitle","subtitle","CardText","chalkboard","algorithm","testcase","class","children","id","AlgoLibrary","state","Algorithms","value","copied","this","map","algor","key","text","onCopy","setState","Component","Contact","ContactH1","link","target","href","Navbar","onClick","x","document","getElementById","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ab7df1a1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"chalkboard\":\"style_chalkboard__3khwf\",\"card-body\":\"style_card-body__3DtQv\",\"algorithm\":\"style_algorithm__3332j\",\"title\":\"style_title__3h8eW\",\"testcase\":\"style_testcase__497aG\",\"margin\":\"style_margin__3swwT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Contact\":\"style_Contact__WdzTh\",\"ContactH1\":\"style_ContactH1__3Z93k\",\"link\":\"style_link__27hFG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"style_box__3LUwK\",\"inner\":\"style_inner__3NAL1\",\"marquee\":\"style_marquee__I2omG\"};","import React from \"react\";\nimport classes from \"./style.module.css\";\n\nconst Home = () => {\n  return (\n    <div className={classes.box}>\n      <div className={classes.inner}>\n        <span>Algor-Rythm</span>\n      </div>\n      <div className={classes.inner}>\n        <span>Algor-Rythm</span>\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","import React from \"react\";\nimport { Card, CardText, CardBody, CardTitle, CardSubtitle } from \"reactstrap\";\nimport classes from \"./style.module.css\";\n\nfunction Algorithm(props) {\n  return (\n    <>\n      <Card className={classes.margin}>\n        <CardBody>\n          <CardTitle>\n            <h1 className={classes.title}>{props.title}</h1>\n          </CardTitle>\n          <CardSubtitle>\n            <h3 className={classes.title}>{props.subtitle}</h3>\n          </CardSubtitle>\n          <CardText className={classes.chalkboard}>\n            <p className={classes.algorithm}>{props.algorithm}</p>\n            <p className={classes.testcase}>\n              <i class=\"fas fa-asterisk\"></i>\n              <br />\n              {props.testcase}\n              <br />\n              <i class=\"fas fa-asterisk\"></i>\n              <br />\n              {/* Allows children/additional elements/components inbetween the main component opening and closing tags */}\n              {props.children}\n            </p>\n          </CardText>\n        </CardBody>\n      </Card>\n    </>\n  );\n}\n\nexport default Algorithm;\n","export default [\n  {\n    id: 0,\n    title: \"Basic Arithmetic\",\n    subtitle: \"Add, Subtract, Multiply, and Divide two numbers\",\n    algorithm: `\nlet result;\n\nconst add = (num1, num2) => {\n  return (result = num1 + num2);\n};\n\nconst subtract = (num1, num2) =>{\n  return (result = num1 - num2);\n};\n\nconst multiply = (num1, num2) => {\n  return (result = num1 * num2);\n};\n\nconst divide = (num1, num2) => {\n  return (result = num1 / num2);\n};`,\n    testcase: `\nIf you pass, num1 = 3 and num2 = 6 as arguments to each fuction, you will get:\n\n      add(3,6), result = 9;\n      subtract(3,6), result = -3;\n      multiply(3,6), result = 18;\n      divide(3,6), result = 0.5\n\n        This is basic arithmetic. You are simply returning the value of 'result', \n      which is the artithmetic equation. \n        `\n  },\n  {\n    id: 1,\n    title: \"Vowel Count\",\n    subtitle: \"Find the number of vowels in a string\",\n    algorithm: `\nconst vowelCount = (str) => {\n  let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n  let result = 0;\n\n  for (let i = 0; i < str.length; i++) {\n    var letter = str[i].toLowerCase();\n\n    if (vowels.indexOf(letter) !== -1) {\n      result += 1;\n    }\n  }\n\n  return result;\n};\n`,\n    testcase: `\nCheck each characters of the input string 'str' against the items in the vowel array (the vowels). If the str character at index [i] does occur in the array, add +1 to the result, otherwise do nothing and return result.\n\nIf str=\"Mina\", the for loop would iterate 4 times! Each iteration, setting the next character of the string to lowercase using the toLowerCase() method. If the character of the iteration matches any of the items in the vowel array, +1 to the result! \n\nIn this case, \"Mina\" has 2 vowels, so the value of result = 2.\n`\n  }\n];\n","import React, { Component } from \"react\";\nimport \"./style.css\";\nimport Algorithm from \"../../components/Algorithm\";\nimport Algorithms from \"../../algorithms\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\n\nclass AlgoLibrary extends Component {\n  state = {\n    Algorithms,\n    value: \"\",\n    copied: false\n  };\n\n  render() {\n    return (\n      <div>\n        {this.state.Algorithms.map(algor => (\n          <div>\n            <Algorithm\n              key={algor.id}\n              title={algor.title}\n              subtitle={algor.subtitle}\n              algorithm={algor.algorithm}\n              testcase={algor.testcase}\n            >\n              <br />\n              <CopyToClipboard\n                text={algor.algorithm}\n                onCopy={() => this.setState({ copied: true })}\n              >\n                <span className=\"copyBtn\">Copy this Algorithm</span>\n              </CopyToClipboard>\n            </Algorithm>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default AlgoLibrary;\n","import React from \"react\";\nimport classes from \"./style.module.css\";\n\nconst Contact = () => {\n  return (\n    <div className={classes.Contact}>\n      <h1 className={classes.ContactH1}>Contact:</h1>\n      <p>\n        Feel free to contact me via my contact page on my main&nbsp;\n        <a\n          className={classes.link}\n          target=\"_blank\"\n          href=\"https://shelbypalumbo.github.io/Shelby-Pumbo-React-Portfolio/\"\n        >\n          website\n        </a>\n        !\n      </p>\n\n      <p>\n        Or connect with me on{\" \"}\n        <a\n          className={classes.link}\n          target=\"_blank\"\n          href=\"https://www.linkedin.com/in/shelby-palumbo/\"\n        >\n          linkedIn\n        </a>\n        .\n      </p>\n    </div>\n  );\n};\n\nexport default Contact;\n","import React from \"react\";\nimport \"./style.css\";\n\nconst Navbar = () => {\n  function mobileDropDown() {\n    var x = document.getElementById(\"myTopnav\");\n    if (x.className === \"topnav\") {\n      x.className += \" responsive\";\n    } else {\n      x.className = \"topnav\";\n    }\n  }\n\n  return (\n    <div className=\"topnav\" id=\"myTopnav\">\n      <a href=\"/Contact\" className=\"active\">\n        Contact\n      </a>\n      <a href=\"/AlgoLibrary\">Algorithm Library</a>\n      <a href=\"#/\" className=\"icon\" onClick={mobileDropDown}>\n        <i className=\"fa fa-bars\"></i>\n      </a>\n      <a href=\"/Algor-Rythm\">Home</a>\n    </div>\n  );\n};\nexport default Navbar;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./pages/Home/index\";\nimport AlgoLibrary from \"./pages/AlgoLibrary/index\";\nimport Contact from \"./pages/Contact/index\";\nimport NavBar from \"./components/Navbar\";\n\nfunction App() {\n  return (\n    <Router>\n      <NavBar />\n      <Switch>\n        <Route exact path=\"/Algor-Rythm\" component={Home} />\n        <Route exact path=\"/AlgoLibrary\" component={AlgoLibrary} />\n        <Route exact path=\"/Contact\" component={Contact} />\n      </Switch>\n    </Router>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}