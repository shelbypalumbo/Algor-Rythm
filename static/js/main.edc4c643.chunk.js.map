{"version":3,"sources":["components/Algorithm/style.module.css","pages/Contact/style.module.css","pages/Home/style.module.css","components/Container/style.module.css","pages/Home/index.js","components/Algorithm/index.js","algorithms.js","components/BackToTopBtn/index.js","components/SearchBar/index.js","pages/AlgoLibrary/index.js","pages/Contact/index.js","components/Navbar/index.js","components/Footer/index.js","components/Container/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","className","classes","box","inner","Algorithm","props","Card","margin","CardBody","CardTitle","title","CardSubtitle","subtitle","chalkboard","algorithm","testcase","children","id","BacktoTopBtn","distance","breakpoint","speed","target","SearchBar","type","placeholder","onChange","AlgoLibrary","state","Algorithms","copied","value","search","filteredAlgorithms","findAlgo","filteredAlgos","searched","filter","toLowerCase","charAt","console","log","setState","handleInputChange","event","this","map","algor","key","text","onCopy","Component","Contact","ContactH1","link","rel","href","Navbar","to","onClick","x","document","getElementById","Footer","Container","container","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.edc4c643.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"chalkboard\":\"style_chalkboard__3khwf\",\"title\":\"style_title__3h8eW\",\"algorithm\":\"style_algorithm__3332j\",\"testcase\":\"style_testcase__497aG\",\"margin\":\"style_margin__3swwT\",\"card-body\":\"style_card-body__3DtQv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Contact\":\"style_Contact__WdzTh\",\"ContactH1\":\"style_ContactH1__3Z93k\",\"link\":\"style_link__27hFG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"style_box__3LUwK\",\"inner\":\"style_inner__3NAL1\",\"marquee\":\"style_marquee__I2omG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"style_container__2UoK1\"};","import React from \"react\";\nimport classes from \"./style.module.css\";\n\nconst Home = () => {\n  return (\n    <div className={classes.box}>\n      <div className={classes.inner}>\n        <span>Algor-Rythm</span>\n      </div>\n      <div className={classes.inner}>\n        <span>Algor-Rythm</span>\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","import React from \"react\";\nimport { Card, CardBody, CardTitle, CardSubtitle } from \"reactstrap\";\nimport classes from \"./style.module.css\";\n\nfunction Algorithm(props) {\n  return (\n    <Card className={classes.margin}>\n      <CardBody>\n        <CardTitle>\n          <h1 className={classes.title}>{props.title}</h1>\n        </CardTitle>\n        <CardSubtitle>\n          <h3 className={classes.title}>{props.subtitle}</h3>\n        </CardSubtitle>\n        <div className={classes.chalkboard}>\n          <p className={classes.algorithm}>{props.algorithm}</p>\n          <p className={classes.testcase}>\n            <i className=\"fas fa-asterisk\"></i>\n            <br />\n            {props.testcase}\n            <br />\n            <i className=\"fas fa-asterisk\"></i>\n            <br />\n            {/* Allows children/additional elements/components inbetween the main component opening and closing tags */}\n            {props.children}\n          </p>\n        </div>\n      </CardBody>\n    </Card>\n  );\n}\n\nexport default Algorithm;\n","export default [\n  {\n    id: 0,\n    title: \"Basic Arithmetic\",\n    subtitle: \"Add, Subtract, Multiply, and Divide two numbers\",\n    algorithm: `\nlet result;\n\nconst add = (num1, num2) => {\n  return (result = num1 + num2);\n};\n\nconst subtract = (num1, num2) =>{\n  return (result = num1 - num2);\n};\n\nconst multiply = (num1, num2) => {\n  return (result = num1 * num2);\n};\n\nconst divide = (num1, num2) => {\n  return (result = num1 / num2);\n};`,\n    testcase: `\nIf you pass, num1 = 3 and num2 = 6 as arguments to each fuction, you will get:\n\n      add(3,6), result = 9;\n      subtract(3,6), result = -3;\n      multiply(3,6), result = 18;\n      divide(3,6), result = 0.5\n\n        This is basic arithmetic. You are simply returning the value of 'result', \n      which is the artithmetic equation. \n        `\n  },\n  {\n    id: 1,\n    title: \"Vowel Count\",\n    subtitle: \"Find the number of vowels in a string\",\n    algorithm: `\nconst vowelCount = (str) => {\n  let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n  let result = 0;\n\n  for (let i = 0; i < str.length; i++) {\n    var letter = str[i].toLowerCase();\n\n    if (vowels.indexOf(letter) !== -1) {\n      result += 1;\n    }\n  }\n\n  return result;\n};\n`,\n    testcase: `\nCheck each characters of the input string 'str' against the items in the vowel array (the vowels). If the str character at index [i] does occur in the array, add +1 to the result, otherwise do nothing and return result.\n\nIf str=\"Mina\", the for loop would iterate 4 times! Each iteration, setting the next character of the string to lowercase using the toLowerCase() method. If the character of the iteration matches any of the items in the vowel array, +1 to the result! \n\nIn this case, \"Mina\" has 2 vowels, so the value of result = 2.\n`\n  },\n  {\n    id: 2,\n    title: \"Print Out Only Even Numbers\",\n    subtitle: \"Log the even numbers from a given array of numbers.\",\n    algorithm: `\nconst numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18];\n\nconst logEvenNums = numbers => {\n  for (let i = 0; i <= numbers.length; i++) {\n    if (numbers[i] % 2 == 0) {\n      let even = numbers[i];\n      console.log(even, \"Even Numbers!!!\");\n    }\n  }\n};\n\nlogEvenNums(numbers);\n`,\n    testcase: `In this function you are console logging only the value of the even number in the given array.\n    \n    This is done by iterating over an if statement that checks IF this array item has a remainder of 0, then log the number. \n    \n    The amount of for loop iterations are the length of the given numbers array and numbers[i] will be the value of each array item during each iteration.\n\n    The console will log 0,2,4,6,8,10,12,14,16,18\n`\n  },\n  {\n    id: 3,\n    title: \"Number Countdown\",\n    subtitle:\n      \"Reverse the order of an array of numbers and return each array item\",\n    algorithm: `\nconst nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\n\nconst countDown = nums => {\n  let reversed = nums.reverse();\n  for (var i = 0; i <= reversed.length - 1; i++) {\n    console.log(reversed[i]);\n  }\n};\n\ncountDown(nums);\n`,\n    testcase: `This is not a sorting algorithm, that will come later. \n    This function is just reversing the order of the given array of numbers using the reverse() method and printing each item of the array to the console.\n    \n    The expected result should be \n    \" 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 \".\n`\n  },\n  {\n    id: 4,\n    title: \"String Reversal\",\n    subtitle: \"Reverse the order of a string\",\n    algorithm: `\nconst reverseStr = (str) =>{\n  return str.split(\" \").reverse().join(\" \");\n}\n\nconsole.log(reverseStr(\"Shelby Palumbo\"))\n`,\n    testcase: ` Using the split(\" \") method with a space in quotes, \n    splits the string at the space character. \n    The reverse() method then reverses the order of both items in the string, \n    and then they are rejoined by using the join(\" \") method.\n\n    The expected result is  \"Palumbo Shelby\"\n    `\n  },\n  {\n    id: 5,\n    title: \"Sum of Array\",\n    subtitle: \"The sum of all numbers in an array.\",\n    algorithm: `\nlet numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nlet result;\n\nconst arrSum = numbers => {\n  result = numbers.reduce((a, b) => a + b);\n  return result;\n};\n\narrSum(numbers);\nconsole.log(result);\n`,\n    testcase: ` \nUsing the reduce() method on the numbers array, \nthe reduce method executes a function for each value of the array, in this case, the function adds a + b,\nand stores the value of this result. \n\nThe expected result of the sum of the numbers array is 55.\n\n  a + b = result\n  1 + 2 = 3 \n  3 + 3 = 6\n  6 + 4 = 10\n  10 + 5 = 15\n  15 + 6 = 21\n  21 + 7 = 28\n  28 + 8 = 36\n  36 + 9 = 45\n  45 + 10 = 55\n    `\n  }\n];\n\n// {\n//   id: ,\n//   title: \"\",\n//   subtitle: \"\",\n//   algorithm: `\n// `,\n//   testcase: `\n//   `\n// }\n","import React from \"react\";\nimport ScrollTop from \"react-scrolltop-button\";\nimport \"./style.css\";\n\nconst BacktoTopBtn = () => {\n  return (\n    <ScrollTop\n      distance={100}\n      breakpoint={750}\n      className=\"scroll-your-role\"\n      speed={500}\n      target={0}\n    />\n  );\n};\n\nexport default BacktoTopBtn;\n","import React from \"react\";\nimport \"./style.css\";\n\nconst SearchBar = props => {\n  return (\n    <input\n      className=\"searchBar\"\n      type=\"text\"\n      placeholder=\"Search an algorithm...\"\n      onChange={props.onChange}\n    ></input>\n  );\n};\n\nexport default SearchBar;\n","import React, { Component } from \"react\";\nimport \"./style.css\";\nimport Algorithm from \"../../components/Algorithm\";\nimport Algorithms from \"../../algorithms\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport BacktoTopBtn from \"../../components/BackToTopBtn\";\nimport SearchBar from \"../../components/SearchBar\";\n\nclass AlgoLibrary extends Component {\n  state = {\n    Algorithms,\n    copied: false,\n    value: \"\",\n    search: \"\",\n    filteredAlgorithms: []\n  };\n\n  componentDidMount() {\n    this.setState({ filteredAlgorithms: this.state.Algorithms });\n  }\n\n  findAlgo = () => {\n    let filteredAlgos;\n    let searched = this.state.search;\n\n    filteredAlgos = this.state.Algorithms.filter(function (algorithm) {\n      searched = searched.toLowerCase().charAt(0);\n      console.log(searched);\n      return searched === algorithm.title.toLowerCase().charAt(0);\n    });\n    console.log(\"filtered\", filteredAlgos);\n    return this.setState({\n      filteredAlgorithms: filteredAlgos\n    });\n  };\n\n  handleInputChange = event => {\n    if (event.target.value === \"\") {\n      this.setState({ filteredAlgorithms: this.state.Algorithms });\n    } else {\n      this.setState({ search: event.target.value }, () => {\n        //Take the search input value as an argument for the findEmployee function\n        this.findAlgo();\n      });\n    }\n  };\n\n  render() {\n    console.log(this.state.filteredAlgorithms);\n    return (\n      <>\n        <SearchBar onChange={this.handleInputChange} />\n        <div className=\"margin_top\">\n          <BacktoTopBtn />\n\n          {this.state.filteredAlgorithms.map(algor => (\n            <Algorithm\n              key={algor.id}\n              title={algor.title}\n              subtitle={algor.subtitle}\n              algorithm={algor.algorithm}\n              testcase={algor.testcase}\n            >\n              <br />\n              <CopyToClipboard\n                text={algor.algorithm}\n                onCopy={() => this.setState({ copied: true })}\n              >\n                <span className=\"copyBtn\">Copy this Algorithm</span>\n              </CopyToClipboard>\n            </Algorithm>\n          ))}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default AlgoLibrary;\n","import React from \"react\";\nimport classes from \"./style.module.css\";\n\nconst Contact = () => {\n  return (\n    <div className={classes.Contact}>\n      <h1 className={classes.ContactH1}>Contact:</h1>\n      <p>\n        Feel free to contact me via my contact page on my main&nbsp;\n        <a\n          className={classes.link}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://shelbypalumbo.github.io/Shelby-Palumbo-React-Portfolio/\"\n        >\n          website\n        </a>\n        !\n      </p>\n\n      <p>\n        Or connect with me on{\" \"}\n        <a\n          className={classes.link}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://www.linkedin.com/in/shelby-palumbo/\"\n        >\n          linkedIn\n        </a>\n        .\n      </p>\n    </div>\n  );\n};\n\nexport default Contact;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./style.css\";\n\nconst Navbar = () => {\n  function mobileDropDown() {\n    var x = document.getElementById(\"topNav\");\n    if (x.className === \"topnav\") {\n      x.className += \" responsive\";\n    } else {\n      x.className = \"topnav\";\n    }\n  }\n\n  return (\n    <div className=\"topnav\" id=\"topNav\">\n      <Link to=\"/Contact\" className=\"active\">\n        Contact\n      </Link>\n      <Link to=\"/AlgoLibrary\">Algorithm Library</Link>\n      <a href=\"#/\" className=\"icon\" onClick={mobileDropDown}>\n        <i className=\"fa fa-bars\"></i>\n      </a>\n      <Link className=\"home_a\" to=\"/Algor-Rythm\">\n        Algor-Rythm\n      </Link>\n    </div>\n  );\n};\nexport default Navbar;\n","import React from \"react\";\nimport \"./style.css\";\n\nconst Footer = () => {\n  return (\n    <div className=\"footer\">\n      <div className=\"footleft\">\n        <b>Algor-Rythm</b> Copyright © 2020 Algor-Rythm\n      </div>\n      <div className=\"footright\"></div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport classes from \"./style.module.css\";\n\nconst Container = props => {\n  return <div className={classes.container}>{props.children}</div>;\n};\n\nexport default Container;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./pages/Home/index\";\nimport AlgoLibrary from \"./pages/AlgoLibrary/index\";\nimport Contact from \"./pages/Contact/index\";\nimport Navbar from \"./components/Navbar\";\nimport Footer from \"./components/Footer\";\nimport Container from \"./components/Container\";\n\nfunction App() {\n  return (\n    <Router>\n      <Container>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/Algor-Rythm\" component={Home} />\n          <Route exact path=\"/AlgoLibrary\" component={AlgoLibrary} />\n          <Route exact path=\"/Contact\" component={Contact} />\n        </Switch>\n        <Footer />\n      </Container>\n    </Router>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}